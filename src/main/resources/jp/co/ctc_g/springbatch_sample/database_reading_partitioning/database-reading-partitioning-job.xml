<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	
	<batch:job id="databaseReadingPartitioningJob">
		<batch:step id="partitionedStep" >
			<batch:partition step="readWriteProductsPartitionedStep" partitioner="partitioner">
				<batch:handler task-executor="taskExecutor" />
			</batch:partition>
		</batch:step>
	</batch:job>
	
	<batch:step id="readWriteProductsPartitionedStep">
		<batch:tasklet>
			<batch:chunk reader="reader" writer="writer" commit-interval="10" />
		</batch:tasklet>
	</batch:step>
	
	<bean id="partitioner" class="jp.co.ctc_g.springbatch_sample.database_reading_partitioning.ProductCategoryPartitioner">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
	</bean>
	
	<bean id="reader" class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
		<property name="dataSource" ref="dataSource" />
		<property name="rowMapper">
			<bean class="jp.co.ctc_g.springbatch_sample.database_reading_partitioning.ProductRowMapper" />
		</property>
		<property name="sql" value="select id,name,category from product where category = ?" />
		<property name="preparedStatementSetter">
			<bean class="org.springframework.jdbc.core.ArgPreparedStatementSetter">
				<constructor-arg value="#{stepExecutionContext['category']}" />
			</bean>
		</property>
	</bean>
	
	<bean id="writer" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="file:./src/test/resources/jp/co/ctc_g/springbatch_sample/database_reading_partitioning/products_#{stepExecutionContext['category']}.txt" />
		<property name="lineAggregator">
			<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="fieldExtractor">
					<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id,name,category" />
					</bean>
				</property>
			</bean>
		</property>
		<property name="shouldDeleteIfExists" value="true" />
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:tcp://localhost/mem:database-reading-partitioning" />
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="initialSize" value="5" />
	</bean>

	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:/jp/co/ctc_g/springbatch_sample/database_reading_partitioning/create-tables.sql" />
	</jdbc:initialize-database>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>
